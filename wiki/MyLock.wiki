#summary Keyguard makes no sense when there are no significant keys. What you need is a screenguard paired with a really useful homescreen!

= Project plans =

I have identified 3 steps to the realization of the myLock vision in the first weeks of research and initial alpha programming.

  * The existing keyguard is an obstruction to end user convenience on the Droid since the device has no face buttons; since the only way to even awaken it is the power button on top (impossible to pocket-press accidentally vs the volume or camera keys could be) we will begin this project by simply bypassing the lockscreen automatically.
  * The existing keyguard is not 100% obstruction. It does give us some examples of useful ideas that we want to retain. On the first screen the user sees on wakeup, it is a nice option to have clock display and some shortcuts. We will create a utility widget of sorts to converge the idea of the clock display, battery %, some power controls such as a brightness level button and optional switches for other power-consuming componenets, and of course the silent mode/vibrate toggle similar to the one on the default lockscreen.
  * Finally, it would be useful to see a timeline of waiting events that have occurred while the device has slept in the wakeup or regular homescreen. The creation of this will be most complicated, as it seems it will require programming mini clients for email, twitter, SMS handling, and phone-event handling. I am not sure we have any way to talk to the existing notification panel or pull information from the default email client at all.

= On backwards compatibility =
in 2.0 the change to onstartcommand and startforeground are used instead of onstart and setforeground

also, the welcomeactivity code doesn't seem to exist in the older versions. will have to try to grab some source and see if they had alarm clocks and what their method was.
for now this isn't really a goal.. i'm guessing android will go forward at 2.0 and up pretty strongly considering the announcements that g1 should receive it officially.

= Different release versions =
  * myLock lite - lockscreen bypass: Best for users who just want the slider to be gone, and don't need to use the recent apps function often. The app switcher still works but just isn't initialized immediately upon unlock, like in alpha 1 the home must be launched once to complete the lockscreen dismissal and initialize the feature. Since the only way to initialize it for immediate use is to insert a delay in the unlock which fully exits the lockscreen before proceeding (alpha 2 and beyond), the lite release will be the least intrusive and fastest performing. Other versions will also include the choice to operate in lite mode.
  * myLock complete: Full feature set release incorporating all the customizations we have planned. Users will be able to use lite mode, regular mode, or wakeup homescreen. User choice of stay awake mode, settings notification shortcut, widget feature toggles, as well as our utility widgets for clock, sound, brightness, and battery info.
  * myLock event timeline: feature under review, a great idea and the implementation is very complex

= How the features work =
Now that we are nearing completion of the 3rd alpha feature release, we have quite a few features and options in the app. A quick breakdown of how they work:

  * Alpha 2c uses the pre-android-2.0 lockscreen interaction code. There is no custom lockscreen code in it, just a detection of screen wakeups to execute a few commands to dismiss it automatically.
  * The custom lockscreen uses new android 2.0 code to put a replacement lockscreen up when the screen sleeps. Then it can handle the release of keys to react as we choose. The down press is intercepted by the core power manager, causing the OS to change to a screen awake state. The custom lockscreen stops the screen from waking unless the key being released is defined as a wakeup or unlock key.
  * Shake wakeup is something I can do with or without the custom lockscreen mode. It simply accesses the sensor for the accelerometer to detect shake and accesses the power manager to create a wakeup. For alpha 3 feature release this option will be available to choose with or without the custom lock mode.
  * Idle Timeout - So far this only works with the regular mode, not in custom lockscreen. A timer is set when the phone sleeps, and cancelled back when it wakes. If the timer runs out, the app turns pattern mode and lockscreen back on, then waits for a successful lockscreen exit to start back up again. The default behavior for recent versions has been that pattern mode is automatically disabled and re-enabled with start and stop of myLock.
  * Stay awake - very simple code that suppresses the system from attempting to check for screen sleep timeout.